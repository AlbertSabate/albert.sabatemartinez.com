name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  code-quality:
    name: 🔍 Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: 🏗️ Setup Bun Runtime
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: 📦 Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
        
      - name: 📥 Install Dependencies
        run: |
          echo "📦 Installing dependencies..."
          bun install --frozen-lockfile
          echo "✅ Dependencies installed successfully!"
        
      - name: 🎨 Format Check
        run: |
          echo "🎨 Checking code formatting..."
          bun run format:check
          echo "✅ Code formatting looks good!"
        
      - name: 🔍 Lint Code
        run: |
          echo "🔍 Running linter..."
          bun run lint
          echo "✅ No linting errors found!"
        
      - name: 🔧 Type Check
        run: |
          echo "🔧 Checking TypeScript types..."
          bun run typecheck
          echo "✅ TypeScript compilation successful!"

  deploy-production:
    name: 🚀 Deploy to Production
    needs: code-quality
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://albert.sabatemartinez.com
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🏗️ Setup Bun Runtime
        uses: oven-sh/setup-bun@v2
        
      - name: 📦 Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          
      - name: 📥 Install Dependencies
        run: bun install --frozen-lockfile
        
      - name: 🔨 Build Application
        run: |
          echo "🔨 Building application..."
          bun run build
          echo "✅ Build completed successfully!"
          
      - name: 🌍 Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          
      - name: 🎉 Deployment Success
        run: |
          echo "🎉 Successfully deployed to production!"
          echo "🌍 Site is live at: https://albert.sabatemartinez.com"

  deploy-preview:
    name: 👁️ Deploy Preview
    needs: code-quality
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment:
      name: preview
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🏗️ Setup Bun Runtime
        uses: oven-sh/setup-bun@v2
        
      - name: 📦 Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          
      - name: 📥 Install Dependencies
        run: bun install --frozen-lockfile
        
      - name: 🔨 Build Application
        run: |
          echo "🔨 Building application..."
          bun run build
          echo "✅ Build completed successfully!"
          
      - name: 👁️ Deploy Preview to Cloudflare
        id: preview-deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env preview
          
      - name: 💬 Comment Preview URL on PR
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.preview-deploy.outputs.deployment-url }}';
            const shortSha = '${{ github.sha }}'.substring(0, 7);
            const comment = `## 🚀 Preview Deployment Ready!
            
            Your changes have been deployed to a preview environment:
            
            🔗 **Preview URL:** ${url}
            
            ### 📋 Deployment Details
            - **Commit:** \`${shortSha}\`
            - **Branch:** \`${{ github.head_ref }}\`
            - **Triggered by:** @${{ github.actor }}
            
            ---
            
            This preview will be automatically updated as you push new commits to this PR.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });